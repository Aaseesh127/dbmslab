MOVIES
 1. select mov_title from Movies where dir_id in (select dir_id from Director where dir_name='Hitchcock');

 2.  select distinct m.mov_title,c.act_id from Movies m, Movie_cast c where m.mov_id=c.mov_id and c.act_id in (select act_id from Movie_cast group by act_id having count(mov_id)>1);

 3. select act_name from Actor where act_id in(select a.act_id from (select act_id from Movie_cast natural join Movies where mov_year<2000)a inner join  (select act_id from Movie_cast natural join Movies where mov_year>2015)b on a.act_id=b.act_id);

 4. select mov_title,max(rev_stars) from Movies m,Rating r where m.mov_id=r.mov_id group by m.mov_title having count(r.rev_stars)>0;

 5.update Rating set rev_stars=5 where mov_id in (select mov_id from Movies inner join Director on Movies.dir_id=Director.dir_id and Director.dir_name='Steven Spielberg');

ORDERS:
1. select count(customer_id) from customer where grade > (select avg(grade) from customer where city='Bangalore');

2. select salesman_id,name from salesman where salesman_id in (select s.salesman_id from customer c, salesman s where  s.salesman_id=c.salesman_id group by c.salesman_id having count(c.salesman_id)>1);

3. (select distinct s.salesman_id, 'same city' from salesman s, customer c where s.salesman_id=c.salesman_id and s.city=c.city) union (select distinct s.salesman_id, 'diff city' from salesman s, customer c where s.salesman_id=c.salesman_id and s.city!=c.city) union (select distinct s.salesman_id, 'no customer' from salesman s, customer c where s.salesman_id not in (select c.salesman_id from customer c));

4. create view highest_order as select o.ord_date,o.salesman_id,s.name from orders o,salesman s where o.purchase_amt=(select max(purchase_amt) from orders  where o.salesman_id=s.salesman_id);

5. delete from salesman where salesman_id=101;

COMPANY:
1. (SELECT DISTINCT pno FROM project, department, employee WHERE project.dno = department.dno AND department.mgrssn = employee.ssn AND employee.name like '%Scott') UNION (SELECT DISTINCT works_on.pno FROM project, works_on, employee WHERE project.pno = works_on.pno AND employee.ssn = works_on.ssn AND employee.name like '%Scott');

2. alter table employee modify salary decimal(15,4);

3. select sum(salary), max(salary),min(salary),avg(salary) from employee e,department d where e.dno=d.dno and d.dname='Accounts';

4. select dno, count(*) from employee where salary>600000 and dno in(select dno from employee group by dno having count(*)>5) group by dno;

5. select e.fname,e.lname from employee e where not exists(select pno. from project where dno. = '5' and pno. not in (select pno. from workson w where e.ssn = w.ssn));

LIBRARY:
1. select a.book_id,a.title,a.publisher_name,b.author_name,c.branch_id,c.no_of_copies from Book a,Book_Authors b,Book_Copies c where a.book_id=b.book_id and b.book_id=c.book_id;

2. select card_no from Book_Lending where date_out between '2017-01-01' and '2017-06-30' group by  card_no having count(card_no)>3;

3.  Delete from Book where book_id=104;

4.  alter table Book drop primary key;
	 alter table Book partition by range (publisher_year)  (partition p0 values less than(2005), partition p1 values less than maxvalue);
	  SELECT PARTITION_NAME, TABLE_ROWS FROM 
    -> INFORMATION_SCHEMA.PARTITIONS WHERE TABLE_NAME='Book';
     Alter table Book Truncate partition p0;
5. create view available_books as select a.book_id , ifnull(a.sum - b.sum,a.sum) from (select book_id,sum(no_of_copies) as sum from Book_Copies group by book_id ) a join (select book_id, count(*) as sum from Book_Lending group by book_id)  b on a.book_id = b.book_id;     																												STUDENT:
1. select * from student where usn in(select usn from class join semsec on class.ssid=semsec.ssid and semsec.sem=4 and semsec.sec='C');

2. select sem,sec,gender,count(gender) from student natural join class natural join semsec group by sem,sec,gender;

3. create view test1_1BI15CS101 as select usn,subcode,test1 from iamarks where usn='1BI15CS101';

4. update iamarks set finalia=(test1+test2+test3-least(test1,test2,test3))/2;

5. select usn,subcode,'OUTSTANDING' as CAT from iamarks where finalia>=17 and ssid in (select class.ssid from class,semsec where semsec.sem=8 and (semsec.sec='A' OR semsec.sec='B' OR semsec.sec='C') and semsec.ssid=class.ssid) 
    -> union
    -> select usn,subcode,'AVERAGE' as CAT from iamarks where finalia<=16 and finalia>=12 and ssid in (select class.ssid from class,semsec where semsec.sem=8 and (semsec.sec='A' OR semsec.sec='B' OR semsec.sec='C') and semsec.ssid=class.ssid)
    -> union
    -> select usn,subcode,'WEAK' as CAT from iamarks where finalia<12 and ssid in (select class.ssid from class,semsec where semsec.sem=8 and (semsec.sec='A' OR semsec.sec='B' OR semsec.sec='C') and semsec.ssid=class.ssid);